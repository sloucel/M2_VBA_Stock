Sub Everything()
' [Source] https://stackoverflow.com/questions/21254885/running-at-once-multiple-subs-from-an-unique-vba-sub
' Run all subs at once
Call StockAnalysis
Call Yearly_Percent_Change
Call Min_Max

End Sub

Sub StockAnalysis()

For Each WS In Worksheets

Dim Ticker_Symbol As String
Dim Stock_Volume As Double
Dim Open_Price As Single
Dim Close_Price As Single
Dim Stock_Table_Row As Integer
Dim Last_Row As Long
Dim Open_Date_Captured As Boolean
Dim Set_Open_Price As Single
Dim Close_Price_Captured As Boolean
Dim Set_Close_Price As Single

Stock_Volume = 0
Stock_Table_Row = 2
Cells(1, 9).Value = "Ticker Symbol"
Cells(1, 10).Value = "Open Price"
Cells(1, 11).Value = "Closed Price"
Cells(1, 12).Value = "Yearly Change"
Cells(1, 13).Value = "Percent Change"
Cells(1, 14).Value = "Total  Stock Volume"

Last_Row = Cells(Rows.Count, 1).End(xlUp).Row
'MsgBox Rows.Count & " : " & Last_Row

For Row_n = 2 To Last_Row
    If Open_Date_Captured = False Then
    ' Set Open Price
    Set_Open_Price = Cells(Row_n, 3).Value
    Open_Date_Captured = True
    
    End If
    
    If Close_Price_Captured = False Then
    ' Set Closed Price
    Set_Close_Price = Cells(Row_n, 6).Value

    End If
    ' [Source] Learned from VBA Class_3_Activities_CreditCard-CellComparison
    ' Check if we are still within the same Ticker Symbol, if it is not...
        If Cells(Row_n + 1, 1).Value <> Cells(Row_n, 1).Value Then
        ' Set the Ticker Symbol
            Ticker_Symbol = Cells(Row_n, "A").Value
        ' Add total Stock Volume
            Stock_Volume = Stock_Volume + Cells(Row_n, "G").Value
        ' Add Ticker Symbol to Stock Table
            Range("I" & Stock_Table_Row).Value = Ticker_Symbol
        ' Add Stock Volume to Stock Table
            Range("N" & Stock_Table_Row).Value = Stock_Volume
            
        ' [Source] https://stackoverflow.com/questions/59461571/how-do-i-keep-initial-value-in-a-for-loop
        ' (O) Add Open Price Date
            Range("J" & Stock_Table_Row).Value = Set_Open_Price
        ' (C) Add Closed Price Date
            Range("K" & Stock_Table_Row).Value = Set_Close_Price
            
        ' Add one to the summary table
            Stock_Table_Row = Stock_Table_Row + 1
        ' Reset the Stock Volume
            Stock_Volume = 0
        
         ' [Source] https://stackoverflow.com/questions/59461571/how-do-i-keep-initial-value-in-a-for-loop
        '(O)Reset Open Date Captured
            Open_Date_Captured = False
        '(C)Reset Close Date Captured
            Close_Date_Captured = False
            
    ' If not the same, execute the code above
        Else
            Stock_Volume = Stock_Volume + Cells(Row_n, 7).Value
            
        End If
    Next Row_n
Next WS
End Sub

Sub Yearly_Percent_Change()

For Each WS In Worksheets

Dim Row_n As Integer

Cells(1, "L").Value = "Yearly Change"
Cells(1, "M").Value = "Percent Change"

Last_Row = Cells(Rows.Count, 9).End(xlUp).Row
'MsgBox Rows.Count & " : " & Last_Row

For Row_n = 2 To Last_Row

    'Subtract Close Price from Open Price
    Cells(Row_n, "L") = Cells(Row_n, "K") - Cells(Row_n, "J").Value
    
    'Find Percent Change
    Cells(Row_n, "M") = ((Cells(Row_n, "K") - Cells(Row_n, "J").Value)) / Cells(Row_n, "J").Value
    ' [Resource] https://stackoverflow.com/questions/42844778/vba-for-each-cell-in-range-format-as-percentage
    Cells(Row_n, "M").NumberFormat = "0.00%"
    
    'Conditional Formating for Price Change
    If Cells(Row_n, "L") < 0 Then
        Cells(Row_n, "L").Interior.ColorIndex = 3
        ElseIf Cells(Row_n, "L") > 0 Then
        Cells(Row_n, "L").Interior.ColorIndex = 4
    End If

  'Conditional Formating for Price Change
   If Cells(Row_n, "M") < 0 Then
        Cells(Row_n, "M").Interior.ColorIndex = 3
        ElseIf Cells(Row_n, "M") > 0 Then
        Cells(Row_n, "M").Interior.ColorIndex = 4
    End If

Next Row_n
Next WS
End Sub

Sub Min_Max()

For Each WS In Worksheets

Dim Percent_Rng As Range
Dim Last_Row As Long
Dim Max As Single
Dim Min As Single
Dim Max_Total As Double
Dim Row_n As Integer
Dim Ticker As String

Last_Row = Cells(Rows.Count, 9).End(xlUp).Row

Cells(2, "P").Value = "Greatest % Increase"
Cells(3, "P").Value = "Greatest % Decrease"
Cells(4, "P").Value = "Greatest Total Volume"
Cells(1, "Q").Value = "Ticker"
Cells(1, "R").Value = "Value"

' [Source] https://www.youtube.com/watch?v=o2gHMOTNyB4
   ' Get MAX Percent Change
    Set Percent_Rng = Range("M2:M" & Last_Row)
    Max = Application.WorksheetFunction.Max(Percent_Rng)
    Cells(2, "R").Value = Max
    Cells(2, "R").NumberFormat = "0.00%"
    'MsgBox Max
    
    ' Get MIN Percent Change
    Set Percent_Rng = Range("M2:M" & Last_Row)
    Min = Application.WorksheetFunction.Min(Percent_Rng)
    Cells(3, "R").Value = Min
    Cells(3, "R").NumberFormat = "0.00%"
    'MsgBox Min
    
    ' Get MAX Total Volume
    Set Percent_Rng2 = Range("N2:N" & Last_Row)
    Max_Total = Application.WorksheetFunction.Max(Percent_Rng2)
    Cells(4, "R").Value = Max_Total
    'MsgBox Max_Total
    
For Row_n = 2 To Last_Row
    If (Cells(Row_n, "M").Value = Max) Then
        Cells(2, "Q").Value = Cells(Row_n, "I").Value
    End If

    If (Cells(Row_n, "M").Value = Min) Then
        Cells(3, "Q").Value = Cells(Row_n, "I").Value
    End If

    If (Cells(Row_n, "N").Value = Max_Total) Then
        Cells(4, "Q").Value = Cells(Row_n, "I").Value
    End If
    
Next Row_n
Next WS
End Sub



